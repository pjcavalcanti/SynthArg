# SynthExpr.pyi

from typing import Any

class Formula:
    pass

class Var(Formula):
    def __init__(self, name: str) -> None: ...

class Not(Formula):
    def __init__(self, formula: Formula) -> None: ...

class And(Formula):
    def __init__(self, left: Formula, right: Formula) -> None: ...

class Or(Formula):
    def __init__(self, left: Formula, right: Formula) -> None: ...

class Implies(Formula):
    def __init__(self, antecedent: Formula, consequent: Formula) -> None: ...

class Iff(Formula):
    def __init__(self, left: Formula, right: Formula) -> None: ...

class ToString:
    def __init__(self) -> None: ...
    def __call__(self, formula: Formula) -> str: ...

class RandomGeneratorZipf:
    def __init__(self) -> None: ...
    def __call__(self) -> int: ...
